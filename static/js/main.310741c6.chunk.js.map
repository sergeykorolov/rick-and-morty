{"version":3,"sources":["components/CharacterInfo/CharacterInfo.module.scss","components/CharacterCard/CharacterCard.module.scss","components/Home/Home.module.scss","components/Paginator/Paginator.module.scss","components/Paginator/PaginateItem/PaginateItem.module.scss","components/CharacterCard/CharacterCard.tsx","redux/constants.ts","redux/actions.ts","components/Paginator/PaginateItem/PaginateItem.tsx","components/Paginator/Paginator.tsx","components/Home/Home.tsx","components/CharacterInfo/CharacterInfo.tsx","App.tsx","redux/characters-reducer.ts","redux/app-reducer.ts","redux/sagas.ts","redux/store.ts","index.tsx"],"names":["module","exports","CharacterCard","character","className","styles","card","to","id","cardImage","src","image","alt","cardInfo","name","status","classNames","statusIndicator","red","grey","statusText","origin","characterInfo","infoTitle","infoData","location","FETCH_CHARACTERS","REQUEST_CHARACTERS","FETCH_SINGLE_CHARACTER","REQUEST_SINGLE_CHARACTER","CLEAN_SINGLE_CHARACTER","SET_CURRENT_PAGE","SET_SEARCH_TEXT","getCharacters","page","searchText","type","setCurrentPage","PaginateItem","pageNumber","onPageChanged","value","pages","currentPage","paginateItem","active","onClick","disabled","Paginator","dispatch","useDispatch","paginate","useSelector","state","characters","pageInfo","app","pagesCount","push","paginator","dots","map","Home","useEffect","home","header","title","subtitle","searchBlock","placeholder","onKeyUp","e","setSearchText","target","defaultValue","pageContent","elementsList","notFoundMessage","CharacterInfo","characterId","match","params","wrapper","returnButton","photo","info","locationInfo","App","path","component","exact","initialState","charactersReducer","action","payload","results","appReducer","sagaWatcher","fetchCharacters","fetchSingleCharacter","takeEvery","call","put","getSingleCharacter","a","fetch","response","json","rootReducer","combineReducers","saga","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.310741c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CharacterInfo_wrapper__m0MCz\",\"returnButton\":\"CharacterInfo_returnButton__2EP9F\",\"photo\":\"CharacterInfo_photo__319GY\",\"info\":\"CharacterInfo_info__3gF7T\",\"name\":\"CharacterInfo_name__1i8D8\",\"status\":\"CharacterInfo_status__3sgSj\",\"statusIndicator\":\"CharacterInfo_statusIndicator__3phZd\",\"grey\":\"CharacterInfo_grey__1f-_i\",\"red\":\"CharacterInfo_red__ZQgDK\",\"statusText\":\"CharacterInfo_statusText__18SGv\",\"locationInfo\":\"CharacterInfo_locationInfo__1XzzH\",\"subtitle\":\"CharacterInfo_subtitle__2rPE4\",\"location\":\"CharacterInfo_location__IXgaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CharacterCard_card__CFnXd\",\"cardImage\":\"CharacterCard_cardImage__V4Sxo\",\"cardInfo\":\"CharacterCard_cardInfo__1OxNw\",\"name\":\"CharacterCard_name__3JN1M\",\"status\":\"CharacterCard_status__JbZCl\",\"statusIndicator\":\"CharacterCard_statusIndicator__1xHjZ\",\"grey\":\"CharacterCard_grey__1prjH\",\"red\":\"CharacterCard_red__1Nmh3\",\"statusText\":\"CharacterCard_statusText__3YCfM\",\"characterInfo\":\"CharacterCard_characterInfo__2aS1u\",\"infoTitle\":\"CharacterCard_infoTitle__3QG4C\",\"infoData\":\"CharacterCard_infoData__3yhHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1-J7O\",\"title\":\"Home_title__1Hd0T\",\"subtitle\":\"Home_subtitle__3vtiz\",\"searchBlock\":\"Home_searchBlock__qLEiH\",\"pageContent\":\"Home_pageContent__2BNI2\",\"elementsList\":\"Home_elementsList__1C1yN\",\"notFoundMessage\":\"Home_notFoundMessage__3ydW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2qDYg\",\"dots\":\"Paginator_dots__23JSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginateItem\":\"PaginateItem_paginateItem__34YGF\",\"active\":\"PaginateItem_active__1uMww\"};","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport styles from './CharacterCard.module.scss';\nimport { CharacterType } from '../../types/types';\n\nexport type PropsType = {\n  character: CharacterType;\n};\n\nconst CharacterCard: FC<PropsType> = ({ character }) => {\n  return (\n    <NavLink className={styles.card} to={`/character/${character.id}`}>\n      <div className={styles.cardImage}>\n        <img src={character.image} alt=\"аватар персонажа\" />\n      </div>\n      <div className={styles.cardInfo}>\n        <div className={styles.name}>{character.name}</div>\n        <div className={styles.status}>\n          <div\n            className={classNames(\n              styles.statusIndicator,\n              { [styles.red]: character.status === 'Dead' },\n              { [styles.grey]: character.status === 'unknown' },\n            )}\n          />\n          <div className={styles.statusText}>\n            {character.status} - {character.origin.name}\n          </div>\n        </div>\n        <div className={styles.characterInfo}>\n          <div className={styles.infoTitle}>Last known location:</div>\n          <div className={styles.infoData}>{character.location.name}</div>\n        </div>\n      </div>\n    </NavLink>\n  );\n};\n\nexport default CharacterCard;\n","export const FETCH_CHARACTERS = 'FETCH_CHARACTERS';\nexport const REQUEST_CHARACTERS = 'REQUEST_CHARACTERS';\nexport const FETCH_SINGLE_CHARACTER = 'FETCH_SINGLE_CHARACTER';\nexport const REQUEST_SINGLE_CHARACTER = 'REQUEST_SINGLE_CHARACTER';\nexport const CLEAN_SINGLE_CHARACTER = 'CLEAN_SINGLE_CHARACTER';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_SEARCH_TEXT = 'SET_SEARCH_TEXT';\n","import {\n  CLEAN_SINGLE_CHARACTER,\n  REQUEST_CHARACTERS,\n  REQUEST_SINGLE_CHARACTER,\n  SET_CURRENT_PAGE,\n  SET_SEARCH_TEXT,\n} from './constants';\n\nexport const getCharacters = (page: number, searchText: string) => ({\n  type: REQUEST_CHARACTERS,\n  page,\n  searchText,\n});\n\nexport const getSingleCharacter = (id: number) => ({\n  type: REQUEST_SINGLE_CHARACTER,\n  id,\n});\n\nexport const cleanSingleCharacter = () => ({\n  type: CLEAN_SINGLE_CHARACTER,\n});\n\nexport const setCurrentPage = (page: number) => ({\n  type: SET_CURRENT_PAGE,\n  page,\n});\n\nexport const setSearchText = (searchText: string) => ({\n  type: SET_SEARCH_TEXT,\n  searchText,\n});\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport styles from './PaginateItem.module.scss';\n\ntype PropsType = {\n  pageNumber: number;\n  onPageChanged: (pageNumber: number) => void;\n  value: number | string;\n  pages: number;\n  currentPage: number;\n};\n\nconst PaginateItem: FC<PropsType> = ({\n  pageNumber,\n  onPageChanged,\n  value,\n  pages,\n  currentPage,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(styles.paginateItem, {\n        [styles.active]: currentPage === value,\n      })}\n      onClick={() => onPageChanged(pageNumber)}\n      disabled={pageNumber < 1 || pageNumber > pages}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default PaginateItem;\n","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PageInfoType } from '../../types/types';\nimport { AppStateType } from '../../redux/store';\nimport styles from './Paginator.module.scss';\nimport PaginateItem from './PaginateItem/PaginateItem';\nimport { getCharacters, setCurrentPage } from '../../redux/actions';\n\ntype PropsType = {\n  searchText: string;\n};\n\nconst Paginator: FC<PropsType> = ({ searchText }) => {\n  const dispatch = useDispatch();\n  const paginate: PageInfoType = useSelector(\n    (state: AppStateType) => state.characters.pageInfo,\n  );\n  const currentPage: number = useSelector(\n    (state: AppStateType) => state.app.currentPage,\n  );\n  const pagesCount: Array<number> = [];\n\n  if (currentPage > 2) {\n    pagesCount.push(currentPage - 1);\n  }\n  if (currentPage > 1) {\n    pagesCount.push(currentPage);\n  }\n  if (currentPage < paginate.pages) {\n    pagesCount.push(currentPage + 1);\n  }\n\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(getCharacters(pageNumber, searchText));\n    dispatch(setCurrentPage(pageNumber));\n  };\n\n  return (\n    <div className={styles.paginator}>\n      <PaginateItem\n        pageNumber={currentPage - 1}\n        onPageChanged={onPageChanged}\n        value=\"prev\"\n        pages={paginate.pages}\n        currentPage={currentPage}\n      />\n      <PaginateItem\n        pageNumber={1}\n        onPageChanged={onPageChanged}\n        value={1}\n        pages={paginate.pages}\n        currentPage={currentPage}\n      />\n      {currentPage >= 4 && <div className={styles.dots}>...</div>}\n      {pagesCount.map((page: number) => (\n        <PaginateItem\n          pageNumber={page}\n          onPageChanged={onPageChanged}\n          value={page}\n          pages={paginate.pages}\n          currentPage={currentPage}\n          key={page}\n        />\n      ))}\n      {currentPage <= paginate.pages - 3 && (\n        <div className={styles.dots}>...</div>\n      )}\n      {currentPage < paginate.pages - 1 && (\n        <PaginateItem\n          pageNumber={paginate.pages}\n          onPageChanged={onPageChanged}\n          value={paginate.pages}\n          pages={paginate.pages}\n          currentPage={currentPage}\n        />\n      )}\n      <PaginateItem\n        pageNumber={currentPage + 1}\n        onPageChanged={onPageChanged}\n        value=\"next\"\n        pages={paginate.pages}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './Home.module.scss';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport { AppStateType } from '../../redux/store';\nimport { getCharacters, setSearchText } from '../../redux/actions';\nimport { CharacterType } from '../../types/types';\nimport Paginator from '../Paginator/Paginator';\n\nconst Home: FC = () => {\n  const dispatch = useDispatch();\n  const characters: Array<CharacterType> = useSelector(\n    (state: AppStateType) => state.characters.characters,\n  );\n  const currentPage = useSelector(\n    (state: AppStateType) => state.app.currentPage,\n  );\n  const searchText = useSelector((state: AppStateType) => state.app.searchText);\n\n  useEffect(() => {\n    dispatch(getCharacters(currentPage, searchText));\n  }, []);\n\n  const onSearchCharacters = (e: any) => {\n    dispatch(setSearchText(e.target.value));\n    dispatch(getCharacters(1, e.target.value));\n  };\n\n  return (\n    <div className={styles.home}>\n      <div className={styles.header}>\n        <div className={styles.title}>The Rick and Morty</div>\n        <div className={styles.subtitle}>Characters</div>\n        <div className={styles.searchBlock}>\n          <input\n            type=\"text\"\n            placeholder=\"search by name\"\n            onKeyUp={onSearchCharacters}\n            defaultValue={searchText}\n          />\n        </div>\n      </div>\n      {characters ? (\n        <>\n          <Paginator searchText={searchText} />\n          <div className={styles.pageContent}>\n            <ul className={styles.elementsList}>\n              {characters.map((character: CharacterType) => (\n                <CharacterCard character={character} key={character.id} />\n              ))}\n            </ul>\n          </div>\n          <Paginator searchText={searchText} />\n        </>\n      ) : (\n        <div className={styles.notFoundMessage}>Characters not found!</div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport styles from './CharacterInfo.module.scss';\nimport { cleanSingleCharacter, getSingleCharacter } from '../../redux/actions';\nimport { AppStateType } from '../../redux/store';\nimport { CharacterType } from '../../types/types';\n\ntype PropsType = {\n  match: any;\n};\n\nconst CharacterInfo: FC<PropsType> = ({ match }) => {\n  const { characterId } = match.params;\n\n  const dispatch = useDispatch();\n  const character: CharacterType = useSelector(\n    (state: AppStateType) => state.characters.character,\n  );\n\n  useEffect(() => {\n    dispatch(getSingleCharacter(characterId));\n\n    return function cleanUp() {\n      dispatch(cleanSingleCharacter());\n    };\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <NavLink to=\"/\" className={styles.returnButton} />\n      <div className={styles.photo}>\n        <img src={character.image} alt=\"avatar\" />\n      </div>\n      <div className={styles.info}>\n        <div className={styles.name}>{character.name}</div>\n        <div className={styles.status}>\n          <div\n            className={classNames(\n              styles.statusIndicator,\n              { [styles.red]: character.status === 'Dead' },\n              { [styles.grey]: character.status === 'unknown' },\n            )}\n          />\n          <div className={styles.statusText}>\n            {character.status} - {character.origin && character.origin.name}\n          </div>\n        </div>\n        <div className={styles.locationInfo}>\n          <div className={styles.subtitle}>Last known location:</div>\n          <div className={styles.location}>\n            {character.location && character.location.name}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterInfo;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport CharacterInfo from './components/CharacterInfo/CharacterInfo';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Route path=\"/character/:characterId?\" component={CharacterInfo} exact />\n      <Route path=\"/\" component={Home} exact />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  CLEAN_SINGLE_CHARACTER,\n  FETCH_CHARACTERS,\n  FETCH_SINGLE_CHARACTER,\n} from './constants';\nimport { CharacterType, PageInfoType } from '../types/types';\n\nconst initialState = {\n  pageInfo: {} as PageInfoType,\n  characters: [] as Array<CharacterType>,\n  character: {} as CharacterType,\n};\n\ntype InitialStateType = typeof initialState;\n\nconst charactersReducer = (\n  state = initialState,\n  action: any,\n): InitialStateType => {\n  switch (action.type) {\n    case FETCH_CHARACTERS:\n      return {\n        ...state,\n        characters: action.payload.results,\n        pageInfo: action.payload.info,\n      };\n    case FETCH_SINGLE_CHARACTER:\n      return {\n        ...state,\n        character: action.payload,\n      };\n    case CLEAN_SINGLE_CHARACTER:\n      return {\n        ...state,\n        character: { ...state.character, image: '' } as CharacterType,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default charactersReducer;\n","import { SET_CURRENT_PAGE, SET_SEARCH_TEXT } from './constants';\n\nconst initialState = {\n  currentPage: 1,\n  searchText: '',\n};\n\ntype InitialStateType = typeof initialState;\n\nconst appReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.page };\n    case SET_SEARCH_TEXT:\n      return { ...state, searchText: action.searchText };\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport {\n  FETCH_CHARACTERS,\n  FETCH_SINGLE_CHARACTER,\n  REQUEST_CHARACTERS,\n  REQUEST_SINGLE_CHARACTER,\n} from './constants';\nimport { setCurrentPage } from './actions';\n\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_CHARACTERS, fetchCharacters);\n  yield takeEvery(REQUEST_SINGLE_CHARACTER, fetchSingleCharacter);\n}\n\nfunction* fetchCharacters(action: any) {\n  const payload = yield call(getCharacters, action.page, action.searchText);\n  yield put({ type: FETCH_CHARACTERS, payload });\n  yield put(setCurrentPage(action.page));\n}\n\nfunction* fetchSingleCharacter(action: any) {\n  const payload = yield call(getSingleCharacter, action.id);\n  yield put({ type: FETCH_SINGLE_CHARACTER, payload });\n}\n\nasync function getCharacters(page: number, searchText: string) {\n  const response = await fetch(\n    `https://rickandmortyapi.com/api/character/?page=${page}&name=${searchText}`,\n  );\n  return response.json();\n}\n\nasync function getSingleCharacter(id: number) {\n  const response = await fetch(\n    `https://rickandmortyapi.com/api/character/${id}`,\n  );\n  return response.json();\n}\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport charactersReducer from './characters-reducer';\nimport appReducer from './app-reducer';\nimport { sagaWatcher } from './sagas';\n\nconst rootReducer = combineReducers({\n  characters: charactersReducer,\n  app: appReducer,\n});\n\nconst saga = createSagaMiddleware();\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(saga)));\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nsaga.run(sagaWatcher);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nconst app = (\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}